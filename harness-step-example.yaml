pipeline:
  name: Update Template Documentation
  identifier: update_template_documentation
  projectIdentifier: <+project.identifier>
  orgIdentifier: <+org.identifier>
  tags: {}
  stages:
    - stage:
        name: Generate and Publish Documentation
        identifier: generate_and_publish_documentation
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Generate Template Documentation
                  identifier: generate_template_documentation
                  spec:
                    connectorRef: <+variables.docker_registry_connector>
                    image: <+variables.image_name>
                    command: |
                      python process_template.py \
                        --source /harness/input/codebase/templates \
                        --output /harness/output/docs \
                        --format html \
                        --publish \
                        --confluence-url <+secrets.getValue("confluence_url")> \
                        --confluence-username <+secrets.getValue("confluence_username")> \
                        --confluence-token <+secrets.getValue("confluence_token")> \
                        --confluence-space <+secrets.getValue("confluence_space")> \
                        --confluence-parent-id <+secrets.getValue("confluence_parent_id")> \
                        --verbose
                    privileged: false
                    shell: Sh
                    envVariables:
                      # Pass additional environment variables if needed
                      PYTHONUNBUFFERED: "1"
                    resources:
                      limits:
                        memory: 512Mi
                        cpu: 500m
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          caching:
            enabled: true
            paths:
              - /harness/output/docs
  properties:
    ci:
      codebase:
        connectorRef: <+variables.git_connector>
        repoName: <+variables.repo_name>
        build: <+input>

variables:
  - name: docker_registry_connector
    type: String
    description: Connector ID for Docker registry
    required: true
  - name: git_connector
    type: String
    description: Connector ID for Git repository
    required: true
  - name: repo_name
    type: String
    description: Name of the repository containing Harness templates
    required: true
  - name: image_name
    type: String
    description: Docker image name for documentation generator
    required: true
    value: harness-template-docs:latest

# Note: Replace placeholder values with your actual connector IDs, project IDs, and org IDs
# Secrets should be configured in your Harness project settings 