FROM --platform=$BUILDPLATFORM golang:1.20-alpine AS builder

ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

WORKDIR /app

COPY go.mod go.sum* ./
RUN go mod download

COPY cmd/tempdocs/ ./cmd/tempdocs/
COPY pkg/ ./pkg/
COPY internal/ ./internal/

ARG VERSION=1.0.0
ARG COMMIT=unknown
ARG BUILD_DATE=unknown
RUN CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build \
    -ldflags="-s -w \
    -X github.com/ka1ne/template-doc-gen/internal/version.Version=${VERSION} \
    -X github.com/ka1ne/template-doc-gen/internal/version.Commit=${COMMIT} \
    -X github.com/ka1ne/template-doc-gen/internal/version.BuildDate=${BUILD_DATE} \
    -X github.com/ka1ne/template-doc-gen/internal/version.GoVersion=$(go version | cut -d ' ' -f 3)" \
    -o /app/tempdocs cmd/tempdocs/main.go

FROM --platform=$TARGETPLATFORM gcr.io/distroless/static:nonroot

LABEL org.opencontainers.image.title="Harness Template Documentation Generator"
LABEL org.opencontainers.image.description="Generate documentation for Harness templates"
LABEL org.opencontainers.image.url="https://github.com/ka1ne/template-doc-gen"
LABEL org.opencontainers.image.vendor="ka1ne"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.revision="${COMMIT}"

ENV SOURCE_DIR=/app/templates \
    OUTPUT_DIR=/app/docs/output \
    FORMAT=html \
    VERBOSE=false \
    VALIDATE_ONLY=false

WORKDIR /app
COPY --from=builder /app/tempdocs /app/

VOLUME ["/app/templates", "/app/docs"]
EXPOSE 8000

ENTRYPOINT ["/app/tempdocs"]
CMD ["--source", "/app/templates", "--output", "/app/docs/output", "--format", "html"] 